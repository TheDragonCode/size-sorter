{
    "name": "dragon-code/size-sorter",
    "description": "Easily sort clothing size, height, bra size, furniture size and more",
    "license": "MIT",
    "type": "library",
    "keywords": [
        "size",
        "sorter",
        "clothes",
        "size-sorter",
        "bra-size",
        "furniture-size",
        "dragon-code",
        "andrey-helldar"
    ],
    "authors": [
        {
            "name": "Andrey Helldar",
            "email": "helldar@dragon-code.pro",
            "homepage": "https://dragon-code.pro"
        }
    ],
    "support": {
        "issues": "https://github.com/TheDragonCode/size-sorter/issues",
        "source": "https://github.com/TheDragonCode/size-sorter"
    },
    "funding": [
        {
            "type": "boosty",
            "url": "https://boosty.to/dragon-code"
        },
        {
            "type": "yoomoney",
            "url": "https://yoomoney.ru/to/410012608840929"
        }
    ],
    "require": {
        "php": "^8.2",
        "illuminate/collections": "^11.0 || ^12.0"
    },
    "require-dev": {
        "dragon-code/codestyler": "^6.0",
        "fakerphp/faker": "^1.21",
        "illuminate/database": "^11.0 || ^12.0",
        "pestphp/pest": "^3.8",
        "symfony/var-dumper": "^7.0"
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "DragonCode\\SizeSorter\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "pestphp/pest-plugin": true,
            "symfony/thanks": true
        },
        "preferred-install": "dist",
        "sort-packages": true
    },
    "scripts": {
        "post-update-cmd": [
            "cp vendor/dragon-code/codestyler/presets/pint/8.2.json pint.json",
            "cp vendor/dragon-code/codestyler/.editorconfig .editorconfig",
            "composer normalize"
        ],
        "style": "vendor/bin/pint --parallel",
        "test": "vendor/bin/pest",
        "test:coverage": [
            "Composer\\Config::disableProcessTimeout",
            "@php artisan test --parallel --coverage"
        ],
        "test:types": [
            "Composer\\Config::disableProcessTimeout",
            "@php vendor/bin/pest --type-coverage --min=95"
        ],
        "test:update": [
            "rm -rf tests/.pest/snapshots",
            "@test"
        ]
    }
}
